
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BE BOOLEAN_EXPRESSION CALL COMA COMPARISON CONSTANT CUBE ELSE ENDFOR ENDIF ENDWHILE EQUAL EQUAL_EQUAL FINISH FLOAT FOR GREATER_THAN GREATER_THAN_EQUAL ID IF INT LEFT_PARENTESIS LENGTH LENGTH_I LENGTH_J LENGTH_K LESS_THAN LESS_THAN_EQUAL MATHEMATICAL_CONSTANT MATHEMATICAL_EXPRESSION MATRIX MEAN MEDIAN MINUS MODE NOT NOT_EQUAL OR PLUS READ RETURN RIGHT_PARENTESIS ROUTINE RREF SEMICOLON SLASH STAR START STRING VECTOR WHILE WRITE\n    PROGRAMA : R START V B FINISH R\n    \n    V : BE VARIABLES SEMICOLON B V\n    |\n    \n    VARIABLES : FLOAT ID\n    | T ID\n    | T ID LEFT_PARENTESIS CONSTANT RIGHT_PARENTESIS\n    | T ID LEFT_PARENTESIS CONSTANT COMA CONSTANT RIGHT_PARENTESIS\n    | T ID LEFT_PARENTESIS CONSTANT COMA CONSTANT COMA CONSTANT RIGHT_PARENTESIS\n    \n    T : INT\n    | VECTOR\n    | MATRIX\n    | CUBE\n    \n    R : ROUTINE LEFT_PARENTESIS ID RIGHT_PARENTESIS V B RETURN R\n    |\n    \n    B : CALL ID SEMICOLON V B\n    | ID INDICES EQUAL E SEMICOLON V B\n    | READ ID SEMICOLON V B\n    | WRITE STRING WRITE_AUX SEMICOLON V B\n    | WRITE E WRITE_AUX SEMICOLON V B\n    | IF LEFT_PARENTESIS EL RIGHT_PARENTESIS B ELSE_AUX ENDIF V B\n    | WHILE LEFT_PARENTESIS EL RIGHT_PARENTESIS V B ENDWHILE V B\n    | FOR LEFT_PARENTESIS EL COMA B RIGHT_PARENTESIS V B ENDFOR V B\n    |\n    \n    INDICES : LEFT_PARENTESIS E RIGHT_PARENTESIS\n    | LEFT_PARENTESIS E COMA E RIGHT_PARENTESIS\n    | LEFT_PARENTESIS E COMA E COMA E RIGHT_PARENTESIS\n    |\n    \n    ELSE_AUX : ELSE B\n    |\n    \n    WRITE_AUX : COMA STRING WRITE_AUX\n    | COMA ID INDICES WRITE_AUX\n    |\n    \n    EL : LEFT_PARENTESIS EL RIGHT_PARENTESIS EL_AUX\n    | CONSTANT EL_AUX\n    | ID EL_AUX\n    \n    EL_AUX : COMPARISON EL\n    |\n    \n    E : LEFT_PARENTESIS E RIGHT_PARENTESIS E_AUX\n    | CONSTANT E_AUX\n    | ID INDICES E_AUX\n    \n    E_AUX : PLUS E\n    | STAR E\n    | SLASH E\n    | MINUS E\n    |\n    '
    
_lr_action_items = {'ROUTINE':([0,25,90,],[3,3,3,]),'START':([0,2,90,107,],[-14,4,-14,-13,]),'$end':([1,25,42,90,107,],[0,-14,-1,-14,-13,]),'LEFT_PARENTESIS':([3,11,13,14,15,16,28,32,34,35,36,37,40,44,52,53,54,55,57,69,73,84,109,],[5,28,32,35,36,37,32,32,28,57,57,57,64,32,32,32,32,32,57,32,28,57,32,]),'BE':([4,24,38,43,46,63,66,70,71,74,86,88,91,92,94,95,98,108,111,113,118,120,122,124,129,130,133,134,135,137,138,],[7,7,-23,7,7,7,-23,-23,7,7,7,-2,-15,7,-17,-23,-23,-23,-18,-19,7,-16,7,7,-23,-23,-20,-21,7,-23,-22,]),'CALL':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,10,-3,10,10,-3,-3,-3,10,10,-3,-3,10,-3,10,-2,-15,-3,-17,10,10,10,10,-18,-19,10,-3,-16,-3,-3,10,10,10,-20,-21,-3,10,-22,]),'ID':([4,5,6,10,12,13,18,19,20,21,22,23,24,28,32,35,36,37,38,41,43,44,46,48,52,53,54,55,57,63,66,69,70,71,74,82,84,86,87,88,91,92,94,95,98,103,108,109,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,8,11,26,29,34,39,40,-9,-10,-11,-12,-3,34,34,60,60,60,11,11,-3,34,-3,73,34,34,34,34,60,-3,11,34,11,-3,-3,11,60,-3,11,-2,-15,-3,-17,11,11,11,11,34,-18,-19,11,-3,-16,-3,-3,11,11,11,-20,-21,-3,11,-22,]),'READ':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,12,-3,12,12,-3,-3,-3,12,12,-3,-3,12,-3,12,-2,-15,-3,-17,12,12,12,12,-18,-19,12,-3,-16,-3,-3,12,12,12,-20,-21,-3,12,-22,]),'WRITE':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,13,-3,13,13,-3,-3,-3,13,13,-3,-3,13,-3,13,-2,-15,-3,-17,13,13,13,13,-18,-19,13,-3,-16,-3,-3,13,13,13,-20,-21,-3,13,-22,]),'IF':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,14,-3,14,14,-3,-3,-3,14,14,-3,-3,14,-3,14,-2,-15,-3,-17,14,14,14,14,-18,-19,14,-3,-16,-3,-3,14,14,14,-20,-21,-3,14,-22,]),'WHILE':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,15,-3,15,15,-3,-3,-3,15,15,-3,-3,15,-3,15,-2,-15,-3,-17,15,15,15,15,-18,-19,15,-3,-16,-3,-3,15,15,15,-20,-21,-3,15,-22,]),'FOR':([4,6,24,38,41,43,46,63,66,70,71,74,82,86,87,88,91,92,94,95,98,103,108,111,113,116,118,120,122,124,125,129,130,133,134,135,137,138,],[-3,16,-3,16,16,-3,-3,-3,16,16,-3,-3,16,-3,16,-2,-15,-3,-17,16,16,16,16,-18,-19,16,-3,-16,-3,-3,16,16,16,-20,-21,-3,16,-22,]),'FINISH':([4,6,9,38,43,46,63,66,70,71,74,88,91,92,94,95,98,108,111,113,120,122,124,129,130,133,134,135,137,138,],[-3,-23,25,-23,-3,-3,-3,-23,-23,-3,-3,-2,-15,-3,-17,-23,-23,-23,-18,-19,-16,-3,-3,-23,-23,-20,-21,-3,-23,-22,]),'FLOAT':([7,],[18,]),'INT':([7,],[20,]),'VECTOR':([7,],[21,]),'MATRIX':([7,],[22,]),'CUBE':([7,],[23,]),'RIGHT_PARENTESIS':([8,33,34,38,43,45,46,50,51,56,58,59,60,61,63,66,68,70,71,74,75,76,77,78,79,80,81,83,85,87,88,89,91,92,93,94,95,98,99,100,102,104,108,110,111,113,114,119,120,121,122,124,128,129,130,132,133,134,135,137,138,],[24,-45,-27,-23,-3,68,-3,75,-39,-45,82,-37,-37,86,-3,-23,-24,-23,-3,-3,-45,-41,-42,-43,-44,-40,100,-34,-35,-23,-2,105,-15,-3,110,-17,-23,-23,-38,-37,-36,118,-23,-25,-18,-19,-33,127,-16,128,-3,-3,-26,-23,-23,136,-20,-21,-3,-23,-22,]),'EQUAL':([11,27,68,110,128,],[-27,44,-24,-25,-26,]),'STRING':([13,48,],[30,72,]),'CONSTANT':([13,28,32,35,36,37,44,52,53,54,55,57,64,69,84,106,109,126,],[33,33,33,59,59,59,33,33,33,33,33,59,89,33,59,119,33,132,]),'SEMICOLON':([17,26,29,30,31,33,34,39,40,47,49,51,56,67,68,72,73,75,76,77,78,79,80,96,97,99,105,110,112,127,128,136,],[38,43,46,-32,-32,-45,-27,-4,-5,71,74,-39,-45,92,-24,-32,-27,-45,-41,-42,-43,-44,-40,-30,-32,-38,-6,-25,-31,-7,-26,-8,]),'RETURN':([24,38,41,43,46,63,65,66,70,71,74,88,91,92,94,95,98,108,111,113,120,122,124,129,130,133,134,135,137,138,],[-3,-23,-23,-3,-3,-3,90,-23,-23,-3,-3,-2,-15,-3,-17,-23,-23,-23,-18,-19,-16,-3,-3,-23,-23,-20,-21,-3,-23,-22,]),'COMA':([30,31,33,34,45,51,56,59,60,62,68,72,73,75,76,77,78,79,80,83,85,89,93,97,99,100,102,110,114,119,128,],[48,48,-45,-27,69,-39,-45,-37,-37,87,-24,48,-27,-45,-41,-42,-43,-44,-40,-34,-35,106,109,48,-38,-37,-36,-25,-33,126,-26,]),'PLUS':([33,34,56,68,75,110,128,],[52,-27,52,-24,52,-25,-26,]),'STAR':([33,34,56,68,75,110,128,],[53,-27,53,-24,53,-25,-26,]),'SLASH':([33,34,56,68,75,110,128,],[54,-27,54,-24,54,-25,-26,]),'MINUS':([33,34,56,68,75,110,128,],[55,-27,55,-24,55,-25,-26,]),'ELSE':([38,43,46,63,66,70,71,74,82,88,91,92,94,95,98,101,108,111,113,120,122,124,129,130,133,134,135,137,138,],[-23,-3,-3,-3,-23,-23,-3,-3,-23,-2,-15,-3,-17,-23,-23,116,-23,-18,-19,-16,-3,-3,-23,-23,-20,-21,-3,-23,-22,]),'ENDIF':([38,43,46,63,66,70,71,74,82,88,91,92,94,95,98,101,108,111,113,115,116,120,122,123,124,129,130,133,134,135,137,138,],[-23,-3,-3,-3,-23,-23,-3,-3,-23,-2,-15,-3,-17,-23,-23,-29,-23,-18,-19,122,-23,-16,-3,-28,-3,-23,-23,-20,-21,-3,-23,-22,]),'ENDWHILE':([38,43,46,63,66,70,71,74,86,88,91,92,94,95,98,103,108,111,113,117,120,122,124,129,130,133,134,135,137,138,],[-23,-3,-3,-3,-23,-23,-3,-3,-3,-2,-15,-3,-17,-23,-23,-23,-23,-18,-19,124,-16,-3,-3,-23,-23,-20,-21,-3,-23,-22,]),'ENDFOR':([38,43,46,63,66,70,71,74,88,91,92,94,95,98,108,111,113,118,120,122,124,125,129,130,131,133,134,135,137,138,],[-23,-3,-3,-3,-23,-23,-3,-3,-2,-15,-3,-17,-23,-23,-23,-18,-19,-3,-16,-3,-3,-23,-23,-23,135,-20,-21,-3,-23,-22,]),'COMPARISON':([59,60,100,],[84,84,84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'R':([0,25,90,],[2,42,107,]),'V':([4,24,43,46,63,71,74,86,92,118,122,124,135,],[6,41,66,70,88,95,98,103,108,125,129,130,137,]),'B':([6,38,41,66,70,82,87,95,98,103,108,116,125,129,130,137,],[9,63,65,91,94,101,104,111,113,117,120,123,131,133,134,138,]),'VARIABLES':([7,],[17,]),'T':([7,],[19,]),'INDICES':([11,34,73,],[27,56,97,]),'E':([13,28,32,44,52,53,54,55,69,109,],[31,45,50,67,76,77,78,79,93,121,]),'WRITE_AUX':([30,31,72,97,],[47,49,96,112,]),'E_AUX':([33,56,75,],[51,80,99,]),'EL':([35,36,37,57,84,],[58,61,62,81,102,]),'EL_AUX':([59,60,100,],[83,85,114,]),'ELSE_AUX':([101,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> R START V B FINISH R','PROGRAMA',6,'p_PROGRAMA','TA.py',118),
  ('V -> BE VARIABLES SEMICOLON B V','V',5,'p_V','TA.py',125),
  ('V -> <empty>','V',0,'p_V','TA.py',126),
  ('VARIABLES -> FLOAT ID','VARIABLES',2,'p_VARIABLES','TA.py',131),
  ('VARIABLES -> T ID','VARIABLES',2,'p_VARIABLES','TA.py',132),
  ('VARIABLES -> T ID LEFT_PARENTESIS CONSTANT RIGHT_PARENTESIS','VARIABLES',5,'p_VARIABLES','TA.py',133),
  ('VARIABLES -> T ID LEFT_PARENTESIS CONSTANT COMA CONSTANT RIGHT_PARENTESIS','VARIABLES',7,'p_VARIABLES','TA.py',134),
  ('VARIABLES -> T ID LEFT_PARENTESIS CONSTANT COMA CONSTANT COMA CONSTANT RIGHT_PARENTESIS','VARIABLES',9,'p_VARIABLES','TA.py',135),
  ('T -> INT','T',1,'p_T','TA.py',142),
  ('T -> VECTOR','T',1,'p_T','TA.py',143),
  ('T -> MATRIX','T',1,'p_T','TA.py',144),
  ('T -> CUBE','T',1,'p_T','TA.py',145),
  ('R -> ROUTINE LEFT_PARENTESIS ID RIGHT_PARENTESIS V B RETURN R','R',8,'p_R','TA.py',152),
  ('R -> <empty>','R',0,'p_R','TA.py',153),
  ('B -> CALL ID SEMICOLON V B','B',5,'p_B','TA.py',159),
  ('B -> ID INDICES EQUAL E SEMICOLON V B','B',7,'p_B','TA.py',160),
  ('B -> READ ID SEMICOLON V B','B',5,'p_B','TA.py',161),
  ('B -> WRITE STRING WRITE_AUX SEMICOLON V B','B',6,'p_B','TA.py',162),
  ('B -> WRITE E WRITE_AUX SEMICOLON V B','B',6,'p_B','TA.py',163),
  ('B -> IF LEFT_PARENTESIS EL RIGHT_PARENTESIS B ELSE_AUX ENDIF V B','B',9,'p_B','TA.py',164),
  ('B -> WHILE LEFT_PARENTESIS EL RIGHT_PARENTESIS V B ENDWHILE V B','B',9,'p_B','TA.py',165),
  ('B -> FOR LEFT_PARENTESIS EL COMA B RIGHT_PARENTESIS V B ENDFOR V B','B',11,'p_B','TA.py',166),
  ('B -> <empty>','B',0,'p_B','TA.py',167),
  ('INDICES -> LEFT_PARENTESIS E RIGHT_PARENTESIS','INDICES',3,'p_INDICES','TA.py',172),
  ('INDICES -> LEFT_PARENTESIS E COMA E RIGHT_PARENTESIS','INDICES',5,'p_INDICES','TA.py',173),
  ('INDICES -> LEFT_PARENTESIS E COMA E COMA E RIGHT_PARENTESIS','INDICES',7,'p_INDICES','TA.py',174),
  ('INDICES -> <empty>','INDICES',0,'p_INDICES','TA.py',175),
  ('ELSE_AUX -> ELSE B','ELSE_AUX',2,'p_ELSE_AUX','TA.py',180),
  ('ELSE_AUX -> <empty>','ELSE_AUX',0,'p_ELSE_AUX','TA.py',181),
  ('WRITE_AUX -> COMA STRING WRITE_AUX','WRITE_AUX',3,'p_WRITE_AUX','TA.py',186),
  ('WRITE_AUX -> COMA ID INDICES WRITE_AUX','WRITE_AUX',4,'p_WRITE_AUX','TA.py',187),
  ('WRITE_AUX -> <empty>','WRITE_AUX',0,'p_WRITE_AUX','TA.py',188),
  ('EL -> LEFT_PARENTESIS EL RIGHT_PARENTESIS EL_AUX','EL',4,'p_EL','TA.py',193),
  ('EL -> CONSTANT EL_AUX','EL',2,'p_EL','TA.py',194),
  ('EL -> ID EL_AUX','EL',2,'p_EL','TA.py',195),
  ('EL_AUX -> COMPARISON EL','EL_AUX',2,'p_EL_AUX','TA.py',200),
  ('EL_AUX -> <empty>','EL_AUX',0,'p_EL_AUX','TA.py',201),
  ('E -> LEFT_PARENTESIS E RIGHT_PARENTESIS E_AUX','E',4,'p_E','TA.py',206),
  ('E -> CONSTANT E_AUX','E',2,'p_E','TA.py',207),
  ('E -> ID INDICES E_AUX','E',3,'p_E','TA.py',208),
  ('E_AUX -> PLUS E','E_AUX',2,'p_E_AUX','TA.py',213),
  ('E_AUX -> STAR E','E_AUX',2,'p_E_AUX','TA.py',214),
  ('E_AUX -> SLASH E','E_AUX',2,'p_E_AUX','TA.py',215),
  ('E_AUX -> MINUS E','E_AUX',2,'p_E_AUX','TA.py',216),
  ('E_AUX -> <empty>','E_AUX',0,'p_E_AUX','TA.py',217),
]
