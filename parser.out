Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C B FINISH
Rule 2     MAIN_ACTION_C -> <empty>
Rule 3     MAIN_ACTION -> <empty>
Rule 4     R -> SUBROUTINE_RULE R
Rule 5     R -> <empty>
Rule 6     SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN
Rule 7     SUBACTION -> <empty>
Rule 8     DECL -> DIM ID AS TYPE SEMICOLON DECL
Rule 9     DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL
Rule 10    DECL -> <empty>
Rule 11    ARRAY -> ARRAY_RULE ARRAY
Rule 12    ARRAY -> ARRAY_RULE
Rule 13    ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET
Rule 14    TYPE -> INT
Rule 15    TYPE -> FLOAT
Rule 16    B -> STATEMENT B
Rule 17    B -> STATEMENT
Rule 18    B -> <empty>
Rule 19    STATEMENT -> IF_RULE
Rule 20    STATEMENT -> IFELSE_RULE
Rule 21    STATEMENT -> WHILE_RULE
Rule 22    STATEMENT -> GOSUB_RULE
Rule 23    STATEMENT -> FOR_RULE
Rule 24    STATEMENT -> PRINT_RULE
Rule 25    STATEMENT -> PRINTLN_RULE
Rule 26    STATEMENT -> INPUT_RULE
Rule 27    STATEMENT -> ASSIGN
Rule 28    INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON
Rule 29    PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON
Rule 30    PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON
Rule 31    PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON
Rule 32    PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
Rule 33    GOSUB_RULE -> GOSUB ID SEMICOLON
Rule 34    FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
Rule 35    FOR_ACTION -> <empty>
Rule 36    WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
Rule 37    WHILE_ACTION -> <empty>
Rule 38    WHILE_ACTION_JUMP -> <empty>
Rule 39    IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
Rule 40    IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
Rule 41    ELSE_RULE -> ELSE B
Rule 42    IF_ACTION -> <empty>
Rule 43    ELSE_ACTION -> <empty>
Rule 44    ASSIGN -> ID EQUALS EXPRESSION SEMICOLON
Rule 45    ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON
Rule 46    BOUND_CHECK -> <empty>
Rule 47    EXPRESSION -> OR_LEVEL
Rule 48    OR_LEVEL -> OR_LEVEL OR AND_LEVEL
Rule 49    OR_LEVEL -> AND_LEVEL
Rule 50    AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL
Rule 51    AND_LEVEL -> RELATIONAL_LEVEL
Rule 52    RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
Rule 53    RELATIONAL_LEVEL -> ADDSUB_LEVEL
Rule 54    ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
Rule 55    ADDSUB_LEVEL -> MULTDIV_LEVEL
Rule 56    MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL
Rule 57    MULTDIV_LEVEL -> NOT_LEVEL
Rule 58    NOT_LEVEL -> NOT NOT_LEVEL
Rule 59    NOT_LEVEL -> F
Rule 60    F -> ID
Rule 61    F -> ID ARRAY BOUND_CHECK
Rule 62    F -> FNUMBER
Rule 63    F -> NUMBER
Rule 64    F -> LPAREN EXPRESSION RPAREN

Terminals, with rules where they appear

ADDSUB               : 54
AND                  : 50
AS                   : 8 9
DIM                  : 8 9
ELSE                 : 41
END                  : 36 39 40
EQUALS               : 44 45
FINISH               : 1
FLOAT                : 15
FNUMBER              : 62
FOR                  : 34
GOSUB                : 33
ID                   : 6 8 9 33 34 44 45 60 61
IF                   : 39 40
INPUT                : 28
INT                  : 14
LBRACKET             : 13
LPAREN               : 28 29 30 31 32 36 39 40 64
MULTDIV              : 56
NEXT                 : 34
NOT                  : 58
NUMBER               : 63
OR                   : 48
PRINT                : 29 30
PRINTLN              : 31 32
PROGRAM              : 1
RBRACKET             : 13
RELATIONAL           : 52
RETURN               : 6
RPAREN               : 28 29 30 31 32 36 39 40 64
SEMICOLON            : 8 9 28 29 30 31 32 33 44 45
START                : 1
STRING               : 29 31
SUBROUTINE           : 6
THEN                 : 39 40
TO                   : 34
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

ADDSUB_LEVEL         : 52 53 54
AND_LEVEL            : 48 49 50
ARRAY                : 9 11 45 61
ARRAY_RULE           : 11 12
ASSIGN               : 27 34
B                    : 1 6 16 34 36 39 40 41
BOUND_CHECK          : 45 61
DECL                 : 1 8 9
ELSE_ACTION          : 40
ELSE_RULE            : 40
EXPRESSION           : 13 28 30 32 34 36 39 40 44 45 64
F                    : 59
FOR_ACTION           : 34
FOR_RULE             : 23
GOSUB_RULE           : 22
IFELSE_RULE          : 20
IF_ACTION            : 39 40
IF_RULE              : 19
INPUT_RULE           : 26
MAIN_ACTION          : 1
MAIN_ACTION_C        : 1
MULTDIV_LEVEL        : 54 55 56
NOT_LEVEL            : 56 57 58
OR_LEVEL             : 47 48
PRINTLN_RULE         : 25
PRINT_RULE           : 24
R                    : 1 4
RELATIONAL_LEVEL     : 50 51 52
S                    : 0
STATEMENT            : 16 17
SUBACTION            : 6
SUBROUTINE_RULE      : 4
TYPE                 : 8 9
WHILE_ACTION         : 36
WHILE_ACTION_JUMP    : 36
WHILE_RULE           : 21

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C B FINISH
    (3) MAIN_ACTION -> .

    PROGRAM         reduce using rule 3 (MAIN_ACTION -> .)

    S                              shift and go to state 1
    MAIN_ACTION                    shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> MAIN_ACTION . PROGRAM START DECL R MAIN_ACTION_C B FINISH

    PROGRAM         shift and go to state 3


state 3

    (1) S -> MAIN_ACTION PROGRAM . START DECL R MAIN_ACTION_C B FINISH

    START           shift and go to state 4


state 4

    (1) S -> MAIN_ACTION PROGRAM START . DECL R MAIN_ACTION_C B FINISH
    (8) DECL -> . DIM ID AS TYPE SEMICOLON DECL
    (9) DECL -> . DIM ID ARRAY AS TYPE SEMICOLON DECL
    (10) DECL -> .

    DIM             shift and go to state 6
    SUBROUTINE      reduce using rule 10 (DECL -> .)
    IF              reduce using rule 10 (DECL -> .)
    WHILE           reduce using rule 10 (DECL -> .)
    GOSUB           reduce using rule 10 (DECL -> .)
    FOR             reduce using rule 10 (DECL -> .)
    PRINT           reduce using rule 10 (DECL -> .)
    PRINTLN         reduce using rule 10 (DECL -> .)
    INPUT           reduce using rule 10 (DECL -> .)
    ID              reduce using rule 10 (DECL -> .)
    FINISH          reduce using rule 10 (DECL -> .)

    DECL                           shift and go to state 5

state 5

    (1) S -> MAIN_ACTION PROGRAM START DECL . R MAIN_ACTION_C B FINISH
    (4) R -> . SUBROUTINE_RULE R
    (5) R -> .
    (6) SUBROUTINE_RULE -> . SUBROUTINE ID SUBACTION B RETURN

    IF              reduce using rule 5 (R -> .)
    WHILE           reduce using rule 5 (R -> .)
    GOSUB           reduce using rule 5 (R -> .)
    FOR             reduce using rule 5 (R -> .)
    PRINT           reduce using rule 5 (R -> .)
    PRINTLN         reduce using rule 5 (R -> .)
    INPUT           reduce using rule 5 (R -> .)
    ID              reduce using rule 5 (R -> .)
    FINISH          reduce using rule 5 (R -> .)
    SUBROUTINE      shift and go to state 9

    R                              shift and go to state 7
    SUBROUTINE_RULE                shift and go to state 8

state 6

    (8) DECL -> DIM . ID AS TYPE SEMICOLON DECL
    (9) DECL -> DIM . ID ARRAY AS TYPE SEMICOLON DECL

    ID              shift and go to state 10


state 7

    (1) S -> MAIN_ACTION PROGRAM START DECL R . MAIN_ACTION_C B FINISH
    (2) MAIN_ACTION_C -> .

    IF              reduce using rule 2 (MAIN_ACTION_C -> .)
    WHILE           reduce using rule 2 (MAIN_ACTION_C -> .)
    GOSUB           reduce using rule 2 (MAIN_ACTION_C -> .)
    FOR             reduce using rule 2 (MAIN_ACTION_C -> .)
    PRINT           reduce using rule 2 (MAIN_ACTION_C -> .)
    PRINTLN         reduce using rule 2 (MAIN_ACTION_C -> .)
    INPUT           reduce using rule 2 (MAIN_ACTION_C -> .)
    ID              reduce using rule 2 (MAIN_ACTION_C -> .)
    FINISH          reduce using rule 2 (MAIN_ACTION_C -> .)

    MAIN_ACTION_C                  shift and go to state 11

state 8

    (4) R -> SUBROUTINE_RULE . R
    (4) R -> . SUBROUTINE_RULE R
    (5) R -> .
    (6) SUBROUTINE_RULE -> . SUBROUTINE ID SUBACTION B RETURN

    IF              reduce using rule 5 (R -> .)
    WHILE           reduce using rule 5 (R -> .)
    GOSUB           reduce using rule 5 (R -> .)
    FOR             reduce using rule 5 (R -> .)
    PRINT           reduce using rule 5 (R -> .)
    PRINTLN         reduce using rule 5 (R -> .)
    INPUT           reduce using rule 5 (R -> .)
    ID              reduce using rule 5 (R -> .)
    FINISH          reduce using rule 5 (R -> .)
    SUBROUTINE      shift and go to state 9

    SUBROUTINE_RULE                shift and go to state 8
    R                              shift and go to state 12

state 9

    (6) SUBROUTINE_RULE -> SUBROUTINE . ID SUBACTION B RETURN

    ID              shift and go to state 13


state 10

    (8) DECL -> DIM ID . AS TYPE SEMICOLON DECL
    (9) DECL -> DIM ID . ARRAY AS TYPE SEMICOLON DECL
    (11) ARRAY -> . ARRAY_RULE ARRAY
    (12) ARRAY -> . ARRAY_RULE
    (13) ARRAY_RULE -> . LBRACKET EXPRESSION RBRACKET

    AS              shift and go to state 14
    LBRACKET        shift and go to state 17

    ARRAY                          shift and go to state 15
    ARRAY_RULE                     shift and go to state 16

state 11

    (1) S -> MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C . B FINISH
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    FINISH          reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    B                              shift and go to state 18
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 12

    (4) R -> SUBROUTINE_RULE R .

    IF              reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    WHILE           reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    GOSUB           reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    FOR             reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    PRINT           reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    PRINTLN         reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    INPUT           reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    ID              reduce using rule 4 (R -> SUBROUTINE_RULE R .)
    FINISH          reduce using rule 4 (R -> SUBROUTINE_RULE R .)


state 13

    (6) SUBROUTINE_RULE -> SUBROUTINE ID . SUBACTION B RETURN
    (7) SUBACTION -> .

    IF              reduce using rule 7 (SUBACTION -> .)
    WHILE           reduce using rule 7 (SUBACTION -> .)
    GOSUB           reduce using rule 7 (SUBACTION -> .)
    FOR             reduce using rule 7 (SUBACTION -> .)
    PRINT           reduce using rule 7 (SUBACTION -> .)
    PRINTLN         reduce using rule 7 (SUBACTION -> .)
    INPUT           reduce using rule 7 (SUBACTION -> .)
    ID              reduce using rule 7 (SUBACTION -> .)
    RETURN          reduce using rule 7 (SUBACTION -> .)

    SUBACTION                      shift and go to state 37

state 14

    (8) DECL -> DIM ID AS . TYPE SEMICOLON DECL
    (14) TYPE -> . INT
    (15) TYPE -> . FLOAT

    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    TYPE                           shift and go to state 38

state 15

    (9) DECL -> DIM ID ARRAY . AS TYPE SEMICOLON DECL

    AS              shift and go to state 41


state 16

    (11) ARRAY -> ARRAY_RULE . ARRAY
    (12) ARRAY -> ARRAY_RULE .
    (11) ARRAY -> . ARRAY_RULE ARRAY
    (12) ARRAY -> . ARRAY_RULE
    (13) ARRAY_RULE -> . LBRACKET EXPRESSION RBRACKET

    AS              reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    EQUALS          reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    MULTDIV         reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    ADDSUB          reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    RELATIONAL      reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    AND             reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    OR              reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    RBRACKET        reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    RPAREN          reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    SEMICOLON       reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    IF              reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    WHILE           reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    GOSUB           reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    FOR             reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    PRINT           reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    PRINTLN         reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    INPUT           reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    ID              reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    NEXT            reduce using rule 12 (ARRAY -> ARRAY_RULE .)
    LBRACKET        shift and go to state 17

    ARRAY_RULE                     shift and go to state 16
    ARRAY                          shift and go to state 42

state 17

    (13) ARRAY_RULE -> LBRACKET . EXPRESSION RBRACKET
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 43
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 18

    (1) S -> MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C B . FINISH

    FINISH          shift and go to state 56


state 19

    (16) B -> STATEMENT . B
    (17) B -> STATEMENT .
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

  ! reduce/reduce conflict for FINISH resolved using rule 17 (B -> STATEMENT .)
  ! reduce/reduce conflict for RETURN resolved using rule 17 (B -> STATEMENT .)
  ! reduce/reduce conflict for NEXT resolved using rule 17 (B -> STATEMENT .)
  ! reduce/reduce conflict for END resolved using rule 17 (B -> STATEMENT .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (B -> STATEMENT .)
    FINISH          reduce using rule 17 (B -> STATEMENT .)
    RETURN          reduce using rule 17 (B -> STATEMENT .)
    NEXT            reduce using rule 17 (B -> STATEMENT .)
    END             reduce using rule 17 (B -> STATEMENT .)
    ELSE            reduce using rule 17 (B -> STATEMENT .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

  ! FINISH          [ reduce using rule 18 (B -> .) ]
  ! RETURN          [ reduce using rule 18 (B -> .) ]
  ! NEXT            [ reduce using rule 18 (B -> .) ]
  ! END             [ reduce using rule 18 (B -> .) ]
  ! ELSE            [ reduce using rule 18 (B -> .) ]

    STATEMENT                      shift and go to state 19
    B                              shift and go to state 57
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 20

    (19) STATEMENT -> IF_RULE .

    IF              reduce using rule 19 (STATEMENT -> IF_RULE .)
    WHILE           reduce using rule 19 (STATEMENT -> IF_RULE .)
    GOSUB           reduce using rule 19 (STATEMENT -> IF_RULE .)
    FOR             reduce using rule 19 (STATEMENT -> IF_RULE .)
    PRINT           reduce using rule 19 (STATEMENT -> IF_RULE .)
    PRINTLN         reduce using rule 19 (STATEMENT -> IF_RULE .)
    INPUT           reduce using rule 19 (STATEMENT -> IF_RULE .)
    ID              reduce using rule 19 (STATEMENT -> IF_RULE .)
    FINISH          reduce using rule 19 (STATEMENT -> IF_RULE .)
    RETURN          reduce using rule 19 (STATEMENT -> IF_RULE .)
    NEXT            reduce using rule 19 (STATEMENT -> IF_RULE .)
    END             reduce using rule 19 (STATEMENT -> IF_RULE .)
    ELSE            reduce using rule 19 (STATEMENT -> IF_RULE .)


state 21

    (20) STATEMENT -> IFELSE_RULE .

    IF              reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    WHILE           reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    GOSUB           reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    FOR             reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    PRINT           reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    PRINTLN         reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    INPUT           reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    ID              reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    FINISH          reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    RETURN          reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    NEXT            reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    END             reduce using rule 20 (STATEMENT -> IFELSE_RULE .)
    ELSE            reduce using rule 20 (STATEMENT -> IFELSE_RULE .)


state 22

    (21) STATEMENT -> WHILE_RULE .

    IF              reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    WHILE           reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    GOSUB           reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    FOR             reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    PRINT           reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    PRINTLN         reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    INPUT           reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    ID              reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    FINISH          reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    RETURN          reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    NEXT            reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    END             reduce using rule 21 (STATEMENT -> WHILE_RULE .)
    ELSE            reduce using rule 21 (STATEMENT -> WHILE_RULE .)


state 23

    (22) STATEMENT -> GOSUB_RULE .

    IF              reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    WHILE           reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    GOSUB           reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    FOR             reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    PRINT           reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    PRINTLN         reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    INPUT           reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    ID              reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    FINISH          reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    RETURN          reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    NEXT            reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    END             reduce using rule 22 (STATEMENT -> GOSUB_RULE .)
    ELSE            reduce using rule 22 (STATEMENT -> GOSUB_RULE .)


state 24

    (23) STATEMENT -> FOR_RULE .

    IF              reduce using rule 23 (STATEMENT -> FOR_RULE .)
    WHILE           reduce using rule 23 (STATEMENT -> FOR_RULE .)
    GOSUB           reduce using rule 23 (STATEMENT -> FOR_RULE .)
    FOR             reduce using rule 23 (STATEMENT -> FOR_RULE .)
    PRINT           reduce using rule 23 (STATEMENT -> FOR_RULE .)
    PRINTLN         reduce using rule 23 (STATEMENT -> FOR_RULE .)
    INPUT           reduce using rule 23 (STATEMENT -> FOR_RULE .)
    ID              reduce using rule 23 (STATEMENT -> FOR_RULE .)
    FINISH          reduce using rule 23 (STATEMENT -> FOR_RULE .)
    RETURN          reduce using rule 23 (STATEMENT -> FOR_RULE .)
    NEXT            reduce using rule 23 (STATEMENT -> FOR_RULE .)
    END             reduce using rule 23 (STATEMENT -> FOR_RULE .)
    ELSE            reduce using rule 23 (STATEMENT -> FOR_RULE .)


state 25

    (24) STATEMENT -> PRINT_RULE .

    IF              reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    WHILE           reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    GOSUB           reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    FOR             reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    PRINT           reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    PRINTLN         reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    INPUT           reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    ID              reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    FINISH          reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    RETURN          reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    NEXT            reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    END             reduce using rule 24 (STATEMENT -> PRINT_RULE .)
    ELSE            reduce using rule 24 (STATEMENT -> PRINT_RULE .)


state 26

    (25) STATEMENT -> PRINTLN_RULE .

    IF              reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    WHILE           reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    GOSUB           reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    FOR             reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    PRINT           reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    PRINTLN         reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    INPUT           reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    ID              reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    FINISH          reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    RETURN          reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    NEXT            reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    END             reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)
    ELSE            reduce using rule 25 (STATEMENT -> PRINTLN_RULE .)


state 27

    (26) STATEMENT -> INPUT_RULE .

    IF              reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    WHILE           reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    GOSUB           reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    FOR             reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    PRINT           reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    PRINTLN         reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    INPUT           reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    ID              reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    FINISH          reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    RETURN          reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    NEXT            reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    END             reduce using rule 26 (STATEMENT -> INPUT_RULE .)
    ELSE            reduce using rule 26 (STATEMENT -> INPUT_RULE .)


state 28

    (27) STATEMENT -> ASSIGN .

    IF              reduce using rule 27 (STATEMENT -> ASSIGN .)
    WHILE           reduce using rule 27 (STATEMENT -> ASSIGN .)
    GOSUB           reduce using rule 27 (STATEMENT -> ASSIGN .)
    FOR             reduce using rule 27 (STATEMENT -> ASSIGN .)
    PRINT           reduce using rule 27 (STATEMENT -> ASSIGN .)
    PRINTLN         reduce using rule 27 (STATEMENT -> ASSIGN .)
    INPUT           reduce using rule 27 (STATEMENT -> ASSIGN .)
    ID              reduce using rule 27 (STATEMENT -> ASSIGN .)
    FINISH          reduce using rule 27 (STATEMENT -> ASSIGN .)
    RETURN          reduce using rule 27 (STATEMENT -> ASSIGN .)
    NEXT            reduce using rule 27 (STATEMENT -> ASSIGN .)
    END             reduce using rule 27 (STATEMENT -> ASSIGN .)
    ELSE            reduce using rule 27 (STATEMENT -> ASSIGN .)


state 29

    (39) IF_RULE -> IF . LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> IF . LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END

    LPAREN          shift and go to state 58


state 30

    (36) WHILE_RULE -> WHILE . LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END

    LPAREN          shift and go to state 59


state 31

    (33) GOSUB_RULE -> GOSUB . ID SEMICOLON

    ID              shift and go to state 60


state 32

    (44) ASSIGN -> ID . EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> ID . ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON
    (11) ARRAY -> . ARRAY_RULE ARRAY
    (12) ARRAY -> . ARRAY_RULE
    (13) ARRAY_RULE -> . LBRACKET EXPRESSION RBRACKET

    EQUALS          shift and go to state 61
    LBRACKET        shift and go to state 17

    ARRAY                          shift and go to state 62
    ARRAY_RULE                     shift and go to state 16

state 33

    (34) FOR_RULE -> FOR . ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    ID              shift and go to state 32

    ASSIGN                         shift and go to state 63

state 34

    (29) PRINT_RULE -> PRINT . LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> PRINT . LPAREN EXPRESSION RPAREN SEMICOLON

    LPAREN          shift and go to state 64


state 35

    (31) PRINTLN_RULE -> PRINTLN . LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> PRINTLN . LPAREN EXPRESSION RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 36

    (28) INPUT_RULE -> INPUT . LPAREN EXPRESSION RPAREN SEMICOLON

    LPAREN          shift and go to state 66


state 37

    (6) SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION . B RETURN
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    RETURN          reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    B                              shift and go to state 67
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 38

    (8) DECL -> DIM ID AS TYPE . SEMICOLON DECL

    SEMICOLON       shift and go to state 68


state 39

    (14) TYPE -> INT .

    SEMICOLON       reduce using rule 14 (TYPE -> INT .)


state 40

    (15) TYPE -> FLOAT .

    SEMICOLON       reduce using rule 15 (TYPE -> FLOAT .)


state 41

    (9) DECL -> DIM ID ARRAY AS . TYPE SEMICOLON DECL
    (14) TYPE -> . INT
    (15) TYPE -> . FLOAT

    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    TYPE                           shift and go to state 69

state 42

    (11) ARRAY -> ARRAY_RULE ARRAY .

    AS              reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    EQUALS          reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    MULTDIV         reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    ADDSUB          reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    RELATIONAL      reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    AND             reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    OR              reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    RBRACKET        reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    RPAREN          reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    SEMICOLON       reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    IF              reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    WHILE           reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    GOSUB           reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    FOR             reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    PRINT           reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    PRINTLN         reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    INPUT           reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    ID              reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)
    NEXT            reduce using rule 11 (ARRAY -> ARRAY_RULE ARRAY .)


state 43

    (13) ARRAY_RULE -> LBRACKET EXPRESSION . RBRACKET

    RBRACKET        shift and go to state 70


state 44

    (47) EXPRESSION -> OR_LEVEL .
    (48) OR_LEVEL -> OR_LEVEL . OR AND_LEVEL

    RBRACKET        reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    RPAREN          reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    SEMICOLON       reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    IF              reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    WHILE           reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    GOSUB           reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    FOR             reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    PRINT           reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    PRINTLN         reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    INPUT           reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    ID              reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    NEXT            reduce using rule 47 (EXPRESSION -> OR_LEVEL .)
    OR              shift and go to state 71


state 45

    (49) OR_LEVEL -> AND_LEVEL .
    (50) AND_LEVEL -> AND_LEVEL . AND RELATIONAL_LEVEL

    OR              reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    RBRACKET        reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    RPAREN          reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    SEMICOLON       reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    IF              reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    WHILE           reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    GOSUB           reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    FOR             reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    PRINT           reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    PRINTLN         reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    INPUT           reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    ID              reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    NEXT            reduce using rule 49 (OR_LEVEL -> AND_LEVEL .)
    AND             shift and go to state 72


state 46

    (51) AND_LEVEL -> RELATIONAL_LEVEL .
    (52) RELATIONAL_LEVEL -> RELATIONAL_LEVEL . RELATIONAL ADDSUB_LEVEL

    AND             reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    OR              reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    RBRACKET        reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    RPAREN          reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    SEMICOLON       reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    IF              reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    WHILE           reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    GOSUB           reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    FOR             reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    PRINT           reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    PRINTLN         reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    INPUT           reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    ID              reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    NEXT            reduce using rule 51 (AND_LEVEL -> RELATIONAL_LEVEL .)
    RELATIONAL      shift and go to state 73


state 47

    (53) RELATIONAL_LEVEL -> ADDSUB_LEVEL .
    (54) ADDSUB_LEVEL -> ADDSUB_LEVEL . ADDSUB MULTDIV_LEVEL

    RELATIONAL      reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    AND             reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    OR              reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    RBRACKET        reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    RPAREN          reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    SEMICOLON       reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    IF              reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    WHILE           reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    GOSUB           reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    FOR             reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    PRINT           reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    PRINTLN         reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    INPUT           reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    ID              reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    NEXT            reduce using rule 53 (RELATIONAL_LEVEL -> ADDSUB_LEVEL .)
    ADDSUB          shift and go to state 74


state 48

    (55) ADDSUB_LEVEL -> MULTDIV_LEVEL .
    (56) MULTDIV_LEVEL -> MULTDIV_LEVEL . MULTDIV NOT_LEVEL

    ADDSUB          reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    RELATIONAL      reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    AND             reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    OR              reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    RBRACKET        reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    RPAREN          reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    SEMICOLON       reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    IF              reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    WHILE           reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    GOSUB           reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    FOR             reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    PRINT           reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    PRINTLN         reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    INPUT           reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    ID              reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    NEXT            reduce using rule 55 (ADDSUB_LEVEL -> MULTDIV_LEVEL .)
    MULTDIV         shift and go to state 75


state 49

    (57) MULTDIV_LEVEL -> NOT_LEVEL .

    MULTDIV         reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    ADDSUB          reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    RELATIONAL      reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    AND             reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    OR              reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    RBRACKET        reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    RPAREN          reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    SEMICOLON       reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    IF              reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    WHILE           reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    GOSUB           reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    FOR             reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    PRINT           reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    PRINTLN         reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    INPUT           reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    ID              reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)
    NEXT            reduce using rule 57 (MULTDIV_LEVEL -> NOT_LEVEL .)


state 50

    (58) NOT_LEVEL -> NOT . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    NOT_LEVEL                      shift and go to state 76
    F                              shift and go to state 51

state 51

    (59) NOT_LEVEL -> F .

    MULTDIV         reduce using rule 59 (NOT_LEVEL -> F .)
    ADDSUB          reduce using rule 59 (NOT_LEVEL -> F .)
    RELATIONAL      reduce using rule 59 (NOT_LEVEL -> F .)
    AND             reduce using rule 59 (NOT_LEVEL -> F .)
    OR              reduce using rule 59 (NOT_LEVEL -> F .)
    RBRACKET        reduce using rule 59 (NOT_LEVEL -> F .)
    RPAREN          reduce using rule 59 (NOT_LEVEL -> F .)
    SEMICOLON       reduce using rule 59 (NOT_LEVEL -> F .)
    IF              reduce using rule 59 (NOT_LEVEL -> F .)
    WHILE           reduce using rule 59 (NOT_LEVEL -> F .)
    GOSUB           reduce using rule 59 (NOT_LEVEL -> F .)
    FOR             reduce using rule 59 (NOT_LEVEL -> F .)
    PRINT           reduce using rule 59 (NOT_LEVEL -> F .)
    PRINTLN         reduce using rule 59 (NOT_LEVEL -> F .)
    INPUT           reduce using rule 59 (NOT_LEVEL -> F .)
    ID              reduce using rule 59 (NOT_LEVEL -> F .)
    NEXT            reduce using rule 59 (NOT_LEVEL -> F .)


state 52

    (60) F -> ID .
    (61) F -> ID . ARRAY BOUND_CHECK
    (11) ARRAY -> . ARRAY_RULE ARRAY
    (12) ARRAY -> . ARRAY_RULE
    (13) ARRAY_RULE -> . LBRACKET EXPRESSION RBRACKET

    MULTDIV         reduce using rule 60 (F -> ID .)
    ADDSUB          reduce using rule 60 (F -> ID .)
    RELATIONAL      reduce using rule 60 (F -> ID .)
    AND             reduce using rule 60 (F -> ID .)
    OR              reduce using rule 60 (F -> ID .)
    RBRACKET        reduce using rule 60 (F -> ID .)
    RPAREN          reduce using rule 60 (F -> ID .)
    SEMICOLON       reduce using rule 60 (F -> ID .)
    IF              reduce using rule 60 (F -> ID .)
    WHILE           reduce using rule 60 (F -> ID .)
    GOSUB           reduce using rule 60 (F -> ID .)
    FOR             reduce using rule 60 (F -> ID .)
    PRINT           reduce using rule 60 (F -> ID .)
    PRINTLN         reduce using rule 60 (F -> ID .)
    INPUT           reduce using rule 60 (F -> ID .)
    ID              reduce using rule 60 (F -> ID .)
    NEXT            reduce using rule 60 (F -> ID .)
    LBRACKET        shift and go to state 17

    ARRAY                          shift and go to state 77
    ARRAY_RULE                     shift and go to state 16

state 53

    (62) F -> FNUMBER .

    MULTDIV         reduce using rule 62 (F -> FNUMBER .)
    ADDSUB          reduce using rule 62 (F -> FNUMBER .)
    RELATIONAL      reduce using rule 62 (F -> FNUMBER .)
    AND             reduce using rule 62 (F -> FNUMBER .)
    OR              reduce using rule 62 (F -> FNUMBER .)
    RBRACKET        reduce using rule 62 (F -> FNUMBER .)
    RPAREN          reduce using rule 62 (F -> FNUMBER .)
    SEMICOLON       reduce using rule 62 (F -> FNUMBER .)
    IF              reduce using rule 62 (F -> FNUMBER .)
    WHILE           reduce using rule 62 (F -> FNUMBER .)
    GOSUB           reduce using rule 62 (F -> FNUMBER .)
    FOR             reduce using rule 62 (F -> FNUMBER .)
    PRINT           reduce using rule 62 (F -> FNUMBER .)
    PRINTLN         reduce using rule 62 (F -> FNUMBER .)
    INPUT           reduce using rule 62 (F -> FNUMBER .)
    ID              reduce using rule 62 (F -> FNUMBER .)
    NEXT            reduce using rule 62 (F -> FNUMBER .)


state 54

    (63) F -> NUMBER .

    MULTDIV         reduce using rule 63 (F -> NUMBER .)
    ADDSUB          reduce using rule 63 (F -> NUMBER .)
    RELATIONAL      reduce using rule 63 (F -> NUMBER .)
    AND             reduce using rule 63 (F -> NUMBER .)
    OR              reduce using rule 63 (F -> NUMBER .)
    RBRACKET        reduce using rule 63 (F -> NUMBER .)
    RPAREN          reduce using rule 63 (F -> NUMBER .)
    SEMICOLON       reduce using rule 63 (F -> NUMBER .)
    IF              reduce using rule 63 (F -> NUMBER .)
    WHILE           reduce using rule 63 (F -> NUMBER .)
    GOSUB           reduce using rule 63 (F -> NUMBER .)
    FOR             reduce using rule 63 (F -> NUMBER .)
    PRINT           reduce using rule 63 (F -> NUMBER .)
    PRINTLN         reduce using rule 63 (F -> NUMBER .)
    INPUT           reduce using rule 63 (F -> NUMBER .)
    ID              reduce using rule 63 (F -> NUMBER .)
    NEXT            reduce using rule 63 (F -> NUMBER .)


state 55

    (64) F -> LPAREN . EXPRESSION RPAREN
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 78
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 56

    (1) S -> MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C B FINISH .

    $end            reduce using rule 1 (S -> MAIN_ACTION PROGRAM START DECL R MAIN_ACTION_C B FINISH .)


state 57

    (16) B -> STATEMENT B .

    FINISH          reduce using rule 16 (B -> STATEMENT B .)
    RETURN          reduce using rule 16 (B -> STATEMENT B .)
    NEXT            reduce using rule 16 (B -> STATEMENT B .)
    END             reduce using rule 16 (B -> STATEMENT B .)
    ELSE            reduce using rule 16 (B -> STATEMENT B .)


state 58

    (39) IF_RULE -> IF LPAREN . EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> IF LPAREN . EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 79
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 59

    (36) WHILE_RULE -> WHILE LPAREN . WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (37) WHILE_ACTION -> .

    NOT             reduce using rule 37 (WHILE_ACTION -> .)
    ID              reduce using rule 37 (WHILE_ACTION -> .)
    FNUMBER         reduce using rule 37 (WHILE_ACTION -> .)
    NUMBER          reduce using rule 37 (WHILE_ACTION -> .)
    LPAREN          reduce using rule 37 (WHILE_ACTION -> .)

    WHILE_ACTION                   shift and go to state 80

state 60

    (33) GOSUB_RULE -> GOSUB ID . SEMICOLON

    SEMICOLON       shift and go to state 81


state 61

    (44) ASSIGN -> ID EQUALS . EXPRESSION SEMICOLON
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 82
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 62

    (45) ASSIGN -> ID ARRAY . BOUND_CHECK EQUALS EXPRESSION SEMICOLON
    (46) BOUND_CHECK -> .

    EQUALS          reduce using rule 46 (BOUND_CHECK -> .)

    BOUND_CHECK                    shift and go to state 83

state 63

    (34) FOR_RULE -> FOR ASSIGN . TO EXPRESSION FOR_ACTION B NEXT ID

    TO              shift and go to state 84


state 64

    (29) PRINT_RULE -> PRINT LPAREN . STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> PRINT LPAREN . EXPRESSION RPAREN SEMICOLON
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    STRING          shift and go to state 85
    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 86
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 65

    (31) PRINTLN_RULE -> PRINTLN LPAREN . STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> PRINTLN LPAREN . EXPRESSION RPAREN SEMICOLON
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    STRING          shift and go to state 87
    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 88
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 66

    (28) INPUT_RULE -> INPUT LPAREN . EXPRESSION RPAREN SEMICOLON
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 89
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 67

    (6) SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B . RETURN

    RETURN          shift and go to state 90


state 68

    (8) DECL -> DIM ID AS TYPE SEMICOLON . DECL
    (8) DECL -> . DIM ID AS TYPE SEMICOLON DECL
    (9) DECL -> . DIM ID ARRAY AS TYPE SEMICOLON DECL
    (10) DECL -> .

    DIM             shift and go to state 6
    SUBROUTINE      reduce using rule 10 (DECL -> .)
    IF              reduce using rule 10 (DECL -> .)
    WHILE           reduce using rule 10 (DECL -> .)
    GOSUB           reduce using rule 10 (DECL -> .)
    FOR             reduce using rule 10 (DECL -> .)
    PRINT           reduce using rule 10 (DECL -> .)
    PRINTLN         reduce using rule 10 (DECL -> .)
    INPUT           reduce using rule 10 (DECL -> .)
    ID              reduce using rule 10 (DECL -> .)
    FINISH          reduce using rule 10 (DECL -> .)

    DECL                           shift and go to state 91

state 69

    (9) DECL -> DIM ID ARRAY AS TYPE . SEMICOLON DECL

    SEMICOLON       shift and go to state 92


state 70

    (13) ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .

    LBRACKET        reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    AS              reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    EQUALS          reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    MULTDIV         reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    ADDSUB          reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    RELATIONAL      reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    AND             reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    OR              reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    RBRACKET        reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    RPAREN          reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    SEMICOLON       reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    IF              reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    WHILE           reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    GOSUB           reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    FOR             reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    PRINT           reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    PRINTLN         reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    INPUT           reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    ID              reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)
    NEXT            reduce using rule 13 (ARRAY_RULE -> LBRACKET EXPRESSION RBRACKET .)


state 71

    (48) OR_LEVEL -> OR_LEVEL OR . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    AND_LEVEL                      shift and go to state 93
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 72

    (50) AND_LEVEL -> AND_LEVEL AND . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    RELATIONAL_LEVEL               shift and go to state 94
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 73

    (52) RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    ADDSUB_LEVEL                   shift and go to state 95
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 74

    (54) ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    MULTDIV_LEVEL                  shift and go to state 96
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 75

    (56) MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    NOT_LEVEL                      shift and go to state 97
    F                              shift and go to state 51

state 76

    (58) NOT_LEVEL -> NOT NOT_LEVEL .

    MULTDIV         reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    ADDSUB          reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    RELATIONAL      reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    AND             reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    OR              reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    RBRACKET        reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    RPAREN          reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    SEMICOLON       reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    IF              reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    WHILE           reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    GOSUB           reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    FOR             reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    PRINT           reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    PRINTLN         reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    INPUT           reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    ID              reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)
    NEXT            reduce using rule 58 (NOT_LEVEL -> NOT NOT_LEVEL .)


state 77

    (61) F -> ID ARRAY . BOUND_CHECK
    (46) BOUND_CHECK -> .

    MULTDIV         reduce using rule 46 (BOUND_CHECK -> .)
    ADDSUB          reduce using rule 46 (BOUND_CHECK -> .)
    RELATIONAL      reduce using rule 46 (BOUND_CHECK -> .)
    AND             reduce using rule 46 (BOUND_CHECK -> .)
    OR              reduce using rule 46 (BOUND_CHECK -> .)
    RBRACKET        reduce using rule 46 (BOUND_CHECK -> .)
    RPAREN          reduce using rule 46 (BOUND_CHECK -> .)
    SEMICOLON       reduce using rule 46 (BOUND_CHECK -> .)
    IF              reduce using rule 46 (BOUND_CHECK -> .)
    WHILE           reduce using rule 46 (BOUND_CHECK -> .)
    GOSUB           reduce using rule 46 (BOUND_CHECK -> .)
    FOR             reduce using rule 46 (BOUND_CHECK -> .)
    PRINT           reduce using rule 46 (BOUND_CHECK -> .)
    PRINTLN         reduce using rule 46 (BOUND_CHECK -> .)
    INPUT           reduce using rule 46 (BOUND_CHECK -> .)
    ID              reduce using rule 46 (BOUND_CHECK -> .)
    NEXT            reduce using rule 46 (BOUND_CHECK -> .)

    BOUND_CHECK                    shift and go to state 98

state 78

    (64) F -> LPAREN EXPRESSION . RPAREN

    RPAREN          shift and go to state 99


state 79

    (39) IF_RULE -> IF LPAREN EXPRESSION . IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> IF LPAREN EXPRESSION . IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (42) IF_ACTION -> .

    RPAREN          reduce using rule 42 (IF_ACTION -> .)

    IF_ACTION                      shift and go to state 100

state 80

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION . EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 101
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 81

    (33) GOSUB_RULE -> GOSUB ID SEMICOLON .

    IF              reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    WHILE           reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    GOSUB           reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    FOR             reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    PRINT           reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    PRINTLN         reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    INPUT           reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    ID              reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    FINISH          reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    RETURN          reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    NEXT            reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    END             reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)
    ELSE            reduce using rule 33 (GOSUB_RULE -> GOSUB ID SEMICOLON .)


state 82

    (44) ASSIGN -> ID EQUALS EXPRESSION . SEMICOLON

    SEMICOLON       shift and go to state 102


state 83

    (45) ASSIGN -> ID ARRAY BOUND_CHECK . EQUALS EXPRESSION SEMICOLON

    EQUALS          shift and go to state 103


state 84

    (34) FOR_RULE -> FOR ASSIGN TO . EXPRESSION FOR_ACTION B NEXT ID
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 104
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 85

    (29) PRINT_RULE -> PRINT LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 105


state 86

    (30) PRINT_RULE -> PRINT LPAREN EXPRESSION . RPAREN SEMICOLON

    RPAREN          shift and go to state 106


state 87

    (31) PRINTLN_RULE -> PRINTLN LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 107


state 88

    (32) PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION . RPAREN SEMICOLON

    RPAREN          shift and go to state 108


state 89

    (28) INPUT_RULE -> INPUT LPAREN EXPRESSION . RPAREN SEMICOLON

    RPAREN          shift and go to state 109


state 90

    (6) SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .

    SUBROUTINE      reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    IF              reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    WHILE           reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    GOSUB           reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    FOR             reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    PRINT           reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    PRINTLN         reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    INPUT           reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    ID              reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)
    FINISH          reduce using rule 6 (SUBROUTINE_RULE -> SUBROUTINE ID SUBACTION B RETURN .)


state 91

    (8) DECL -> DIM ID AS TYPE SEMICOLON DECL .

    SUBROUTINE      reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    IF              reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    WHILE           reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    GOSUB           reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    FOR             reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    PRINT           reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    PRINTLN         reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    INPUT           reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    ID              reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)
    FINISH          reduce using rule 8 (DECL -> DIM ID AS TYPE SEMICOLON DECL .)


state 92

    (9) DECL -> DIM ID ARRAY AS TYPE SEMICOLON . DECL
    (8) DECL -> . DIM ID AS TYPE SEMICOLON DECL
    (9) DECL -> . DIM ID ARRAY AS TYPE SEMICOLON DECL
    (10) DECL -> .

    DIM             shift and go to state 6
    SUBROUTINE      reduce using rule 10 (DECL -> .)
    IF              reduce using rule 10 (DECL -> .)
    WHILE           reduce using rule 10 (DECL -> .)
    GOSUB           reduce using rule 10 (DECL -> .)
    FOR             reduce using rule 10 (DECL -> .)
    PRINT           reduce using rule 10 (DECL -> .)
    PRINTLN         reduce using rule 10 (DECL -> .)
    INPUT           reduce using rule 10 (DECL -> .)
    ID              reduce using rule 10 (DECL -> .)
    FINISH          reduce using rule 10 (DECL -> .)

    DECL                           shift and go to state 110

state 93

    (48) OR_LEVEL -> OR_LEVEL OR AND_LEVEL .
    (50) AND_LEVEL -> AND_LEVEL . AND RELATIONAL_LEVEL

    OR              reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    RBRACKET        reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    RPAREN          reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    SEMICOLON       reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    IF              reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    WHILE           reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    GOSUB           reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    FOR             reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    PRINT           reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    PRINTLN         reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    INPUT           reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    ID              reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    NEXT            reduce using rule 48 (OR_LEVEL -> OR_LEVEL OR AND_LEVEL .)
    AND             shift and go to state 72


state 94

    (50) AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .
    (52) RELATIONAL_LEVEL -> RELATIONAL_LEVEL . RELATIONAL ADDSUB_LEVEL

    AND             reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    OR              reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    RBRACKET        reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    RPAREN          reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    SEMICOLON       reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    IF              reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    WHILE           reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    GOSUB           reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    FOR             reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    PRINT           reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    PRINTLN         reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    INPUT           reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    ID              reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    NEXT            reduce using rule 50 (AND_LEVEL -> AND_LEVEL AND RELATIONAL_LEVEL .)
    RELATIONAL      shift and go to state 73


state 95

    (52) RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .
    (54) ADDSUB_LEVEL -> ADDSUB_LEVEL . ADDSUB MULTDIV_LEVEL

    RELATIONAL      reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    AND             reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    OR              reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    RBRACKET        reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    RPAREN          reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    SEMICOLON       reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    IF              reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    WHILE           reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    GOSUB           reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    FOR             reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    PRINT           reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    PRINTLN         reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    INPUT           reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    ID              reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    NEXT            reduce using rule 52 (RELATIONAL_LEVEL -> RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL .)
    ADDSUB          shift and go to state 74


state 96

    (54) ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .
    (56) MULTDIV_LEVEL -> MULTDIV_LEVEL . MULTDIV NOT_LEVEL

    ADDSUB          reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    RELATIONAL      reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    AND             reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    OR              reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    RBRACKET        reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    RPAREN          reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    SEMICOLON       reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    IF              reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    WHILE           reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    GOSUB           reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    FOR             reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    PRINT           reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    PRINTLN         reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    INPUT           reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    ID              reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    NEXT            reduce using rule 54 (ADDSUB_LEVEL -> ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL .)
    MULTDIV         shift and go to state 75


state 97

    (56) MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .

    MULTDIV         reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    ADDSUB          reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    RELATIONAL      reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    AND             reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    OR              reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    RBRACKET        reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    RPAREN          reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    SEMICOLON       reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    IF              reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    WHILE           reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    GOSUB           reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    FOR             reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    PRINT           reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    PRINTLN         reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    INPUT           reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    ID              reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)
    NEXT            reduce using rule 56 (MULTDIV_LEVEL -> MULTDIV_LEVEL MULTDIV NOT_LEVEL .)


state 98

    (61) F -> ID ARRAY BOUND_CHECK .

    MULTDIV         reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    ADDSUB          reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    RELATIONAL      reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    AND             reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    OR              reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    RBRACKET        reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    RPAREN          reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    SEMICOLON       reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    IF              reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    WHILE           reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    GOSUB           reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    FOR             reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    PRINT           reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    PRINTLN         reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    INPUT           reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    ID              reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)
    NEXT            reduce using rule 61 (F -> ID ARRAY BOUND_CHECK .)


state 99

    (64) F -> LPAREN EXPRESSION RPAREN .

    MULTDIV         reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    ADDSUB          reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    RELATIONAL      reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    AND             reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    OR              reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    RBRACKET        reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    SEMICOLON       reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    IF              reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    WHILE           reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    GOSUB           reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    FOR             reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    PRINT           reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    PRINTLN         reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    INPUT           reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    ID              reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)
    NEXT            reduce using rule 64 (F -> LPAREN EXPRESSION RPAREN .)


state 100

    (39) IF_RULE -> IF LPAREN EXPRESSION IF_ACTION . RPAREN THEN B END
    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION . RPAREN THEN B ELSE_ACTION ELSE_RULE END

    RPAREN          shift and go to state 111


state 101

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION . WHILE_ACTION_JUMP RPAREN B END
    (38) WHILE_ACTION_JUMP -> .

    RPAREN          reduce using rule 38 (WHILE_ACTION_JUMP -> .)

    WHILE_ACTION_JUMP              shift and go to state 112

state 102

    (44) ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .

    IF              reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    WHILE           reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    GOSUB           reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    FOR             reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    PRINT           reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    PRINTLN         reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    INPUT           reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    ID              reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    FINISH          reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    RETURN          reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    NEXT            reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    END             reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    ELSE            reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)
    TO              reduce using rule 44 (ASSIGN -> ID EQUALS EXPRESSION SEMICOLON .)


state 103

    (45) ASSIGN -> ID ARRAY BOUND_CHECK EQUALS . EXPRESSION SEMICOLON
    (47) EXPRESSION -> . OR_LEVEL
    (48) OR_LEVEL -> . OR_LEVEL OR AND_LEVEL
    (49) OR_LEVEL -> . AND_LEVEL
    (50) AND_LEVEL -> . AND_LEVEL AND RELATIONAL_LEVEL
    (51) AND_LEVEL -> . RELATIONAL_LEVEL
    (52) RELATIONAL_LEVEL -> . RELATIONAL_LEVEL RELATIONAL ADDSUB_LEVEL
    (53) RELATIONAL_LEVEL -> . ADDSUB_LEVEL
    (54) ADDSUB_LEVEL -> . ADDSUB_LEVEL ADDSUB MULTDIV_LEVEL
    (55) ADDSUB_LEVEL -> . MULTDIV_LEVEL
    (56) MULTDIV_LEVEL -> . MULTDIV_LEVEL MULTDIV NOT_LEVEL
    (57) MULTDIV_LEVEL -> . NOT_LEVEL
    (58) NOT_LEVEL -> . NOT NOT_LEVEL
    (59) NOT_LEVEL -> . F
    (60) F -> . ID
    (61) F -> . ID ARRAY BOUND_CHECK
    (62) F -> . FNUMBER
    (63) F -> . NUMBER
    (64) F -> . LPAREN EXPRESSION RPAREN

    NOT             shift and go to state 50
    ID              shift and go to state 52
    FNUMBER         shift and go to state 53
    NUMBER          shift and go to state 54
    LPAREN          shift and go to state 55

    EXPRESSION                     shift and go to state 113
    OR_LEVEL                       shift and go to state 44
    AND_LEVEL                      shift and go to state 45
    RELATIONAL_LEVEL               shift and go to state 46
    ADDSUB_LEVEL                   shift and go to state 47
    MULTDIV_LEVEL                  shift and go to state 48
    NOT_LEVEL                      shift and go to state 49
    F                              shift and go to state 51

state 104

    (34) FOR_RULE -> FOR ASSIGN TO EXPRESSION . FOR_ACTION B NEXT ID
    (35) FOR_ACTION -> .

    IF              reduce using rule 35 (FOR_ACTION -> .)
    WHILE           reduce using rule 35 (FOR_ACTION -> .)
    GOSUB           reduce using rule 35 (FOR_ACTION -> .)
    FOR             reduce using rule 35 (FOR_ACTION -> .)
    PRINT           reduce using rule 35 (FOR_ACTION -> .)
    PRINTLN         reduce using rule 35 (FOR_ACTION -> .)
    INPUT           reduce using rule 35 (FOR_ACTION -> .)
    ID              reduce using rule 35 (FOR_ACTION -> .)
    NEXT            reduce using rule 35 (FOR_ACTION -> .)

    FOR_ACTION                     shift and go to state 114

state 105

    (29) PRINT_RULE -> PRINT LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 106

    (30) PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 107

    (31) PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 108

    (32) PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 118


state 109

    (28) INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 119


state 110

    (9) DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .

    SUBROUTINE      reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    IF              reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    WHILE           reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    GOSUB           reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    FOR             reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    PRINT           reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    PRINTLN         reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    INPUT           reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    ID              reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)
    FINISH          reduce using rule 9 (DECL -> DIM ID ARRAY AS TYPE SEMICOLON DECL .)


state 111

    (39) IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN . THEN B END
    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN . THEN B ELSE_ACTION ELSE_RULE END

    THEN            shift and go to state 120


state 112

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP . RPAREN B END

    RPAREN          shift and go to state 121


state 113

    (45) ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION . SEMICOLON

    SEMICOLON       shift and go to state 122


state 114

    (34) FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION . B NEXT ID
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    NEXT            reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    ASSIGN                         shift and go to state 28
    B                              shift and go to state 123
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27

state 115

    (29) PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .

    IF              reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    GOSUB           reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    PRINTLN         reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    INPUT           reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    ID              reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    FINISH          reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    NEXT            reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    END             reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    ELSE            reduce using rule 29 (PRINT_RULE -> PRINT LPAREN STRING RPAREN SEMICOLON .)


state 116

    (30) PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .

    IF              reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    WHILE           reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    GOSUB           reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    FOR             reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINT           reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINTLN         reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    INPUT           reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    ID              reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    FINISH          reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    RETURN          reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    NEXT            reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    END             reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)
    ELSE            reduce using rule 30 (PRINT_RULE -> PRINT LPAREN EXPRESSION RPAREN SEMICOLON .)


state 117

    (31) PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .

    IF              reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    GOSUB           reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    PRINTLN         reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    INPUT           reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    ID              reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    FINISH          reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    NEXT            reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    END             reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)
    ELSE            reduce using rule 31 (PRINTLN_RULE -> PRINTLN LPAREN STRING RPAREN SEMICOLON .)


state 118

    (32) PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .

    IF              reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    GOSUB           reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    FOR             reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINTLN         reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    INPUT           reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    ID              reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    FINISH          reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    NEXT            reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    END             reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)
    ELSE            reduce using rule 32 (PRINTLN_RULE -> PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON .)


state 119

    (28) INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .

    IF              reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    GOSUB           reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINT           reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    PRINTLN         reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    INPUT           reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    ID              reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    FINISH          reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    NEXT            reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    END             reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)
    ELSE            reduce using rule 28 (INPUT_RULE -> INPUT LPAREN EXPRESSION RPAREN SEMICOLON .)


state 120

    (39) IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN . B END
    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN . B ELSE_ACTION ELSE_RULE END
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    END             reduce using rule 18 (B -> .)
    ELSE            reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    B                              shift and go to state 124
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 121

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN . B END
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    END             reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    B                              shift and go to state 125
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 122

    (45) ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .

    IF              reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    WHILE           reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    GOSUB           reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    FOR             reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    PRINT           reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    PRINTLN         reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    INPUT           reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    ID              reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    FINISH          reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    RETURN          reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    NEXT            reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    END             reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    ELSE            reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)
    TO              reduce using rule 45 (ASSIGN -> ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON .)


state 123

    (34) FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B . NEXT ID

    NEXT            shift and go to state 126


state 124

    (39) IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B . END
    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B . ELSE_ACTION ELSE_RULE END
    (43) ELSE_ACTION -> .

    END             shift and go to state 127
    ELSE            reduce using rule 43 (ELSE_ACTION -> .)

    ELSE_ACTION                    shift and go to state 128

state 125

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B . END

    END             shift and go to state 129


state 126

    (34) FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT . ID

    ID              shift and go to state 130


state 127

    (39) IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .

    IF              reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    WHILE           reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    GOSUB           reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    FOR             reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    PRINT           reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    PRINTLN         reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    INPUT           reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    ID              reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    FINISH          reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    RETURN          reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    NEXT            reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    END             reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)
    ELSE            reduce using rule 39 (IF_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END .)


state 128

    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION . ELSE_RULE END
    (41) ELSE_RULE -> . ELSE B

    ELSE            shift and go to state 132

    ELSE_RULE                      shift and go to state 131

state 129

    (36) WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .

    IF              reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    WHILE           reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    GOSUB           reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    FOR             reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    PRINT           reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    PRINTLN         reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    INPUT           reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    ID              reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    FINISH          reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    RETURN          reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    NEXT            reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    END             reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)
    ELSE            reduce using rule 36 (WHILE_RULE -> WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END .)


state 130

    (34) FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .

    IF              reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    WHILE           reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    GOSUB           reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    FOR             reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    PRINT           reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    PRINTLN         reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    INPUT           reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    ID              reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    FINISH          reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    RETURN          reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    NEXT            reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    END             reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)
    ELSE            reduce using rule 34 (FOR_RULE -> FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID .)


state 131

    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE . END

    END             shift and go to state 133


state 132

    (41) ELSE_RULE -> ELSE . B
    (16) B -> . STATEMENT B
    (17) B -> . STATEMENT
    (18) B -> .
    (19) STATEMENT -> . IF_RULE
    (20) STATEMENT -> . IFELSE_RULE
    (21) STATEMENT -> . WHILE_RULE
    (22) STATEMENT -> . GOSUB_RULE
    (23) STATEMENT -> . FOR_RULE
    (24) STATEMENT -> . PRINT_RULE
    (25) STATEMENT -> . PRINTLN_RULE
    (26) STATEMENT -> . INPUT_RULE
    (27) STATEMENT -> . ASSIGN
    (39) IF_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B END
    (40) IFELSE_RULE -> . IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END
    (36) WHILE_RULE -> . WHILE LPAREN WHILE_ACTION EXPRESSION WHILE_ACTION_JUMP RPAREN B END
    (33) GOSUB_RULE -> . GOSUB ID SEMICOLON
    (34) FOR_RULE -> . FOR ASSIGN TO EXPRESSION FOR_ACTION B NEXT ID
    (29) PRINT_RULE -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (30) PRINT_RULE -> . PRINT LPAREN EXPRESSION RPAREN SEMICOLON
    (31) PRINTLN_RULE -> . PRINTLN LPAREN STRING RPAREN SEMICOLON
    (32) PRINTLN_RULE -> . PRINTLN LPAREN EXPRESSION RPAREN SEMICOLON
    (28) INPUT_RULE -> . INPUT LPAREN EXPRESSION RPAREN SEMICOLON
    (44) ASSIGN -> . ID EQUALS EXPRESSION SEMICOLON
    (45) ASSIGN -> . ID ARRAY BOUND_CHECK EQUALS EXPRESSION SEMICOLON

    END             reduce using rule 18 (B -> .)
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    GOSUB           shift and go to state 31
    FOR             shift and go to state 33
    PRINT           shift and go to state 34
    PRINTLN         shift and go to state 35
    INPUT           shift and go to state 36
    ID              shift and go to state 32

    B                              shift and go to state 134
    STATEMENT                      shift and go to state 19
    IF_RULE                        shift and go to state 20
    IFELSE_RULE                    shift and go to state 21
    WHILE_RULE                     shift and go to state 22
    GOSUB_RULE                     shift and go to state 23
    FOR_RULE                       shift and go to state 24
    PRINT_RULE                     shift and go to state 25
    PRINTLN_RULE                   shift and go to state 26
    INPUT_RULE                     shift and go to state 27
    ASSIGN                         shift and go to state 28

state 133

    (40) IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .

    IF              reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    WHILE           reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    GOSUB           reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    FOR             reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    PRINT           reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    PRINTLN         reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    INPUT           reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    ID              reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    FINISH          reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    RETURN          reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    NEXT            reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    END             reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)
    ELSE            reduce using rule 40 (IFELSE_RULE -> IF LPAREN EXPRESSION IF_ACTION RPAREN THEN B ELSE_ACTION ELSE_RULE END .)


state 134

    (41) ELSE_RULE -> ELSE B .

    END             reduce using rule 41 (ELSE_RULE -> ELSE B .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 19 resolved using rule (B -> STATEMENT)
WARNING: rejected rule (B -> <empty>) in state 19
